#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>

struct node {
    
    int data;
    struct node *left;
    struct node *right;
  
};

struct node* insert( struct node* root, int data ) {
		
	if(root == NULL) {
	
        struct node* node = (struct node*)malloc(sizeof(struct node));

        node->data = data;

        node->left = NULL;
        node->right = NULL;
        return node;
	  
	} else {
      
		struct node* cur;
		
		if(data <= root->data) {
            cur = insert(root->left, data);
            root->left = cur;
		} else {
            cur = insert(root->right, data);
            root->right = cur;
		}
	
		return root;
	}
}
int stk[500][10];
void travel(struct node *root, int level){
    /*int i;
    for(i=0;i<level;i++){
        printf("    ");
    }
    printf("travel(root: %d, level: %d)\n",root->data, level);*/
    if(root->left!=NULL){
        stk[level][0]++;
        stk[level][stk[level][0]]=root->left->data;
    }
    if(root->right!=NULL){
        stk[level][0]++;
        stk[level][stk[level][0]]=root->right->data;
    }
    if(root->left!=NULL)
        travel(root->left, level+1);
    if(root->right!=NULL)
        travel(root->right, level+1);
}
void levelOrder( struct node *root) {
    int i,j,level;
    for(i=0;i<500;i++)
        memset(stk[i],0,sizeof(int)*10);
    stk[0][0]=1;
    stk[0][1]=root->data;
    if(root->left!=NULL||root->right!=NULL)
        travel(root,1);
    i=0;
    while(stk[i][0]>0)i++;
    level=i;
    for(i=0;i<level;i++)
        for(j=1;j<=stk[i][0];j++)
            printf("%d ",stk[i][j]);          
}


int main() {
  
    struct node* root = NULL;
    
    int t;
    int data;

    scanf("%d", &t);

    while(t-- > 0) {
        scanf("%d", &data);
        root = insert(root, data);
    }
  
	levelOrder(root);
    return 0;
}
